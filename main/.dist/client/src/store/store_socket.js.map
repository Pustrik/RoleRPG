{"version":3,"file":"store_socket.js","sourceRoot":"","sources":["../../../../client/src/store/store_socket.ts"],"names":[],"mappings":";;;AAAA,iCAAoC;AAevB,QAAA,yBAAyB,GAAwB;IAC1D,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,EAAa;IACrB,OAAO,EAAE,EAAE;CACd,CAAC;AAUK,MAAM,aAAa,GAAG,CAAC,KAA0B,EAAE,MAA6B,EAAE,EAAE;IACvF,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,MAAM,CAAC,IAAI,GAAG,cAAc,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;IAE1F,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,eAAe;YAChB,uCAAY,KAAK,KAAE,MAAM,EAAE,MAAM,CAAC,OAAiB,IAAG;QAC1D,KAAK,gBAAgB;YACjB,uCAAY,KAAK,KAAE,OAAO,EAAE,MAAM,CAAC,OAAoB,IAAG;QAC9D,KAAK,eAAe;YAChB,uCAAY,KAAK,KAAE,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,KAAM,MAAM,CAAC,OAAkB,CAAC,IAAG;QAC9G;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC,CAAC;AAbW,QAAA,aAAa,iBAaxB;AAOF,MAAM,YAAY,GAAG,IAAA,qBAAa,EAAsB;IACpD,WAAW,EAAE,iCAAyB;IACtC,cAAc,EAAE,GAAG,EAAE,GAAE,CAAC;CAC3B,CAAC,CAAC;AACH,kBAAe,YAAY,CAAC","sourcesContent":["import {createContext} from 'react';\nimport { Socket } from 'socket.io-client';\n\nexport interface IPlayer {\n    socket_id: string,\n    username: string,\n    hp: number,\n    statuses: Array<Number>\n}\nexport interface ISocketContextState {\n    socket: Socket | undefined;\n    player: IPlayer,\n    players: IPlayer[];\n}\n\nexport const defaultSocketContextState: ISocketContextState = {\n    socket: undefined,\n    player: {} as IPlayer,\n    players: []\n};\n\nexport type TSocketContextActions = 'update_socket' | 'update_players' | 'remove_player';\nexport type TSocketContextPayload = string | string[] | Socket | IPlayer[] | IPlayer;\n\nexport interface ISocketContextActions {\n    type: TSocketContextActions;\n    payload: TSocketContextPayload;\n}\n\nexport const SocketReducer = (state: ISocketContextState, action: ISocketContextActions) => {\n    console.log('Message received - Action: ' + action.type + ' - Payload: ', action.payload);\n\n    switch (action.type) {\n        case 'update_socket':\n            return { ...state, socket: action.payload as Socket };\n        case 'update_players':\n            return { ...state, players: action.payload as IPlayer[] };\n        case 'remove_player':\n            return { ...state, players: state.players.filter((uid) => uid.socket_id !== (action.payload as string)) };\n        default:\n            return state;\n    }\n};\n\nexport interface ISocketContextProps {\n    SocketState: ISocketContextState;\n    SocketDispatch: React.Dispatch<ISocketContextActions>;\n}\n\nconst Store_socket = createContext<ISocketContextProps>({\n    SocketState: defaultSocketContextState,\n    SocketDispatch: () => {}\n});\nexport default Store_socket;"]}