{"version":3,"file":"pdb_service.js","sourceRoot":"","sources":["../../services/pdb_service.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAqC;AAE9B,KAAK,UAAU,OAAO,CAAC,EAAU,EAAE,QAAgB,EAAE,KAAa,EAAE,QAAgB,EAAE,QAAgB;IACzG,MAAM,SAAS,GAAG,MAAM,aAAI;SACvB,KAAK,CAAC,sGAAsG,EACzG,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IACnD,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC;AALD,0BAKC;AAEM,KAAK,UAAU,WAAW;IAC7B,MAAM,KAAK,GAAG,MAAM,aAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;IACzD,OAAO,KAAK,CAAC;AACjB,CAAC;AAHD,kCAGC;AAEM,KAAK,UAAU,iBAAiB,CAAC,QAAgB;IACpD,MAAM,SAAS,GAAG,MAAM,aAAI,CAAC,KAAK,CAAC,4CAA4C,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7F,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC;AAHD,8CAGC;AACM,KAAK,UAAU,WAAW,CAAC,EAAU;IACxC,MAAM,SAAS,GAAG,MAAM,aAAI,CAAC,KAAK,CAAC,sCAAsC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjF,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CAAC;AAC9B,CAAC;AAHD,kCAGC;AAEM,KAAK,UAAU,UAAU,CAAC,EAAU,EAAE,QAAgB,EAAE,QAAgB,EAAE,QAAgB;IAC7F,MAAM,SAAS,GAAG,MAAM,aAAI,CAAC,KAAK,CAAC,2FAA2F,EAC1H,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;IACxC,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC;AAJD,gCAIC;AAEM,KAAK,UAAU,UAAU,CAAC,EAAU;IACvC,MAAM,SAAS,GAAG,MAAM,aAAI,CAAC,KAAK,CAAC,gDAAgD,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3F,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC;AAHD,gCAGC","sourcesContent":["import pool from \"../postgre_db/pdb\";\nimport {User} from \"../models/user_pdb\";\nexport async function addUser(id: string, username: string, email: string, password: string, class_id: string): Promise<User> {\n    const user_data = await pool\n        .query(`INSERT INTO user_rpg(id, username, email, password, class_id) values($1, $2, $3, $4, $5) RETURNING *`,\n            [id, username, email, password, class_id]);\n    return user_data.rows[0];\n}\n\nexport async function getAllUsers() {\n    const users = await pool.query(`SELECT * FROM user_rpg`);\n    return users;\n}\n\nexport async function getUserByUsername(username: string): Promise<User> {\n    const user_data = await pool.query(`SELECT * FROM user_rpg where username = $1`, [username]);\n    return user_data.rows[0];\n}\nexport async function getUserById(id: string): Promise<User> {\n    const user_data = await pool.query(`SELECT * FROM user_rpg where id = $1`, [id]);\n    return user_data.rows[0];;\n}\n\nexport async function updateUser(id: string, username: string, password: string, class_id: number): Promise<User> {\n    const user_data = await pool.query(`UPDATE user_rpg set username = $1, password = $2, class_id = $3 where id = $4 RETURNING *`,\n        [username, password, class_id, id]);\n    return user_data.rows[0];\n}\n\nexport async function deleteUser(id: string): Promise<User> {\n    const user_data = await pool.query(`DELETE FROM user_rpg where id = $4 RETURNING *`, [id]);\n    return user_data.rows[0];\n}"]}