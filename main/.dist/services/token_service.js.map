{"version":3,"file":"token_service.js","sourceRoot":"","sources":["../../services/token_service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAAoC;AACpC,uDAAkD;AAClD,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAGZ,SAAgB,aAAa,CAAC,OAAO;IACjC,MAAM,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;IAClF,MAAM,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;IAErF,OAAO,EAAC,YAAY,EAAE,aAAa,EAAC,CAAC;AACzC,CAAC;AALD,sCAKC;AAEM,KAAK,UAAU,SAAS,CAAC,OAAe,EAAE,aAAqB;IAClE,MAAM,UAAU,GAAG,MAAM,yBAAW,CAAC,OAAO,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC;IAC9D,IAAI,UAAU,EAAE;QACZ,UAAU,CAAC,aAAa,GAAG,aAAa,CAAC;QACzC,OAAO,MAAM,UAAU,CAAC,IAAI,EAAE,CAAC;KAClC;IACD,MAAM,KAAK,GAAG,MAAM,yBAAW,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,aAAa,EAAC,CAAC,CAAC;IACtF,OAAO,KAAK,CAAC;AACjB,CAAC;AARD,8BAQC;AAEM,KAAK,UAAU,WAAW,CAAC,aAAqB;IACnD,MAAM,UAAU,GAAG,MAAM,yBAAW,CAAC,SAAS,CAAC,EAAC,aAAa,EAAE,aAAa,EAAC,CAAC,CAAC;IAC/E,OAAO,UAAU,CAAC;AACtB,CAAC;AAHD,kCAGC;AAEM,KAAK,UAAU,SAAS,CAAC,aAAqB;IACjD,MAAM,UAAU,GAAG,MAAM,yBAAW,CAAC,OAAO,CAAC,EAAC,aAAa,EAAE,aAAa,EAAC,CAAC,CAAC;IAC7E,OAAO,UAAU,CAAC;AACtB,CAAC;AAHD,8BAGC;AAED,SAAgB,mBAAmB,CAAC,KAAa;IAC7C,IAAI;QACA,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC5D,OAAO,SAAS,CAAC;KACpB;IAAC,OAAO,CAAC,EAAE;QACR,OAAO,IAAI,CAAC;KACf;AACL,CAAC;AAPD,kDAOC;AAED,SAAgB,oBAAoB,CAAC,KAAa;IAC9C,IAAI;QACA,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC7D,OAAO,SAAS,CAAC;KACpB;IAAC,OAAO,CAAC,EAAE;QACR,OAAO,IAAI,CAAC;KACf;AACL,CAAC;AAPD,oDAOC","sourcesContent":["import * as jwt from \"jsonwebtoken\";\nimport {token_model} from \"../models/token_model\";\nimport dotenv from 'dotenv';\ndotenv.config();\n\n\n    export function generateToken(payload) {\n        const access_token = jwt.sign(payload, process.env.JWT_ACCESS, {expiresIn: '3h'});\n        const refresh_token = jwt.sign(payload, process.env.JWT_REFRESH, {expiresIn: '30d'});\n\n        return {access_token, refresh_token};\n    }\n\n    export async function saveToken(user_id: string, refresh_token: string) {\n        const token_data = await token_model.findOne({user: user_id});\n        if (token_data) {\n            token_data.refresh_token = refresh_token;\n            return await token_data.save();\n        }\n        const token = await token_model.create({user: user_id, refresh_token: refresh_token});\n        return token;\n    }\n\n    export async function removeToken(refresh_token: string) {\n        const token_data = await token_model.deleteOne({refresh_token: refresh_token});\n        return token_data;\n    }\n\n    export async function findToken(refresh_token: string) {\n        const token_data = await token_model.findOne({refresh_token: refresh_token});\n        return token_data;\n    }\n\n    export function validateAccessToken(token: string) {\n        try {\n            const user_data = jwt.verify(token, process.env.JWT_ACCESS);\n            return user_data;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    export function validateRefreshToken(token: string) {\n        try {\n            const user_data = jwt.verify(token, process.env.JWT_REFRESH);\n            return user_data;\n        } catch (e) {\n            return null;\n        }\n    }\n"]}